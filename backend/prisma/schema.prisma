// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  users     User[]
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id             Int            @id @default(autoincrement())
  email          String         @unique
  password       String
  name           String
  role           Role           @default(TECHNICIAN)
  orders         Order[]
  companyId      Int
  company        Company        @relation(fields: [companyId], references: [id])
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  orderHistories OrderHistory[] @relation("UserToHistory")
}

model Order {
  id               Int            @id @default(autoincrement())
  description      String
  status           OrderStatus    @default(RECEIVED)
  clientName       String
  contact          String
  notifyBy         String
  internalNote     String?
  device           String
  stateAtReception String
  companyId        Int
  company          Company        @relation(fields: [companyId], references: [id])
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  userId           Int
  user             User           @relation(fields: [userId], references: [id])
  orderHistories   OrderHistory[] @relation("OrderToHistory")
}

enum OrderStatus {
  RECEIVED
  IN_PROCESS
  READY
  DELIVERED
}

enum Role {
  ADMIN
  TECHNICIAN
}

model OrderHistory {
  id         Int         @id @default(autoincrement())
  orderId    Int
  order      Order       @relation("OrderToHistory", fields: [orderId], references: [id])
  changedBy  Int
  user       User        @relation("UserToHistory", fields: [changedBy], references: [id])
  fromStatus OrderStatus
  toStatus   OrderStatus
  note       String?
  createdAt  DateTime    @default(now())

  @@index([orderId])
  @@index([changedBy])
}
